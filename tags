!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/sdunnaga/projects/twincam/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
/home/sdunnaga/projects/twincam/build/twincam	build/meson-info/intro-install_plan.json	/^{"targets": {"\/home\/sdunnaga\/projects\/twincam\/build\/twincam": {"destination": "{bindir}\/t/;"	o	object:targets
/home/sdunnaga/projects/twincam/build/twincam	build/meson-info/intro-installed.json	/^{"\/home\/sdunnaga\/projects\/twincam\/build\/twincam": "\/usr\/bin\/twincam"}/;"	s
0	build/compile_commands.json	/^  {$/;"	o
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:10.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:11.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:14.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:16.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:18.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:19.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:2.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:24.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:29.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:31.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:33.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:4.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:43.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:49.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
0	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:7.choices
0	build/meson-info/intro-buildsystem_files.json	/^["\/home\/sdunnaga\/projects\/twincam\/meson.build"]/;"	s
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	o
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:0.compile_args
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:0.link_args
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:1.link_args
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:2.compile_args
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:2.link_args
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:3.compile_args
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:3.link_args
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:4.link_args
0	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:5.link_args
0	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	o
0	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	o	array:0.target_sources
0	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.filename
0	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.install_filename
0	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.compiler
0	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
0	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
1	build/compile_commands.json	/^  {$/;"	o
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:10.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:11.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:14.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:16.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:18.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:19.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:2.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:24.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:29.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:31.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:33.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:4.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:43.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:49.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
1	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:7.choices
1	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	o
1	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:0.link_args
1	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:1.link_args
1	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:2.compile_args
1	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	array:3.compile_args
1	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.compiler
1	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
1	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
10	build/compile_commands.json	/^  {$/;"	o
10	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
10	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
10	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
10	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
10	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
10	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
10	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
11	build/compile_commands.json	/^  {$/;"	o
11	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
11	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
11	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
11	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
11	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
11	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
11	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
12	build/compile_commands.json	/^  {$/;"	o
12	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
12	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
12	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
12	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
12	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
12	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
12	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
13	build/compile_commands.json	/^  {$/;"	o
13	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
13	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
13	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
13	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
13	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
14	build/compile_commands.json	/^  {$/;"	o
14	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
14	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
14	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
14	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
14	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
15	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
15	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
15	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
15	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
16	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
16	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
17	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
17	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
18	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
18	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
19	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
19	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
2	build/compile_commands.json	/^  {$/;"	o
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:11.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:14.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:16.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:18.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:19.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:2.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:24.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:29.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:31.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:33.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:4.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:43.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:49.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
2	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:7.choices
2	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	o
2	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
2	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
20	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
20	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
21	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
21	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
22	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
22	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
23	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
23	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
24	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
24	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
25	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
25	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
26	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
26	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
27	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
27	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
28	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
28	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
29	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
29	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
3	build/compile_commands.json	/^  {$/;"	o
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:11.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:16.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:18.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:19.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:33.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:4.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:43.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:49.choices
3	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
3	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	o
3	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
3	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
30	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
30	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
31	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
31	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
32	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
32	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
33	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
34	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
35	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
36	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
37	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
38	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
39	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
4	build/compile_commands.json	/^  {$/;"	o
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:11.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:18.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:33.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:4.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:43.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:49.choices
4	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
4	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	o
4	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
4	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
40	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
41	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
42	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
43	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
44	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
45	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
46	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
47	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
48	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
49	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
5	build/compile_commands.json	/^  {$/;"	o
5	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
5	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:11.choices
5	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
5	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:33.choices
5	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
5	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:4.choices
5	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
5	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
5	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
5	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	o
5	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
5	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
50	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
51	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
52	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
53	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
54	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
55	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
56	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
57	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
58	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
59	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
6	build/compile_commands.json	/^  {$/;"	o
6	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
6	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
6	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
6	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
6	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
6	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
6	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
6	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
60	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
61	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
62	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
63	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
64	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
65	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
66	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
67	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
7	build/compile_commands.json	/^  {$/;"	o
7	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
7	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
7	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
7	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
7	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
7	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
7	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
7	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
8	build/compile_commands.json	/^  {$/;"	o
8	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
8	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
8	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
8	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
8	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
8	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
8	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
8	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
9	build/compile_commands.json	/^  {$/;"	o
9	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	o
9	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:3.choices
9	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:37.choices
9	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:40.choices
9	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:46.choices
9	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	array:52.choices
9	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.parameters
9	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	array:0.target_sources.0.sources
After	lib/systemd/system/twincam-quit.service	/^After=rc-local.service twincam.service systemd-user-sessions.service$/;"	k	section:Unit
AtomicRequest	src/drm.cpp	/^AtomicRequest::AtomicRequest(Device* dev) : dev_(dev) {$/;"	f	class:DRM::AtomicRequest
AtomicRequest	src/drm.h	/^class AtomicRequest {$/;"	c	namespace:DRM
BuildRequires	twincam.spec	/^BuildRequires: SDL2-devel$/;"	t
BuildRequires	twincam.spec	/^BuildRequires: gcc-c++$/;"	t
BuildRequires	twincam.spec	/^BuildRequires: libjpeg-devel$/;"	t
BuildRequires	twincam.spec	/^BuildRequires: meson$/;"	t
BuildRequires	twincam.spec	/^BuildRequires: ninja-build$/;"	t
BuildRequires	twincam.spec	/^BuildRequires: pkgconfig(libcamera)$/;"	t
BuildRequires	twincam.spec	/^BuildRequires: pkgconfig(libdrm)$/;"	t
BuildRequires	twincam.spec	/^BuildRequires: pkgconfig(libevent_pthreads)$/;"	t
BuildRequires	twincam.spec	/^BuildRequires: systemd$/;"	t
CLEAR	src/first_frame.c	/^#define CLEAR(/;"	d	file:
CamApp	src/twincam.cpp	/^CamApp::CamApp() {$/;"	f	class:CamApp
CamApp	src/twincam.cpp	/^class CamApp {$/;"	c	file:
CameraSession	src/camera_session.cpp	/^CameraSession::CameraSession(const CameraManager* const cm) : cm_(cm) {$/;"	f	class:CameraSession
CameraSession	src/camera_session.h	/^class CameraSession {$/;"	c
ConditionVirtualization	lib/systemd/system/twincam-first-frame.service	/^ConditionVirtualization=!container$/;"	k	section:Unit
ConditionVirtualization	lib/systemd/system/twincam.service	/^ConditionVirtualization=!container$/;"	k	section:Unit
Conflicts	twincam.spec	/^Conflicts: plymouth$/;"	t
Connected	src/drm.h	/^    Connected,$/;"	e	enum:DRM::Connector::Status
Connector	src/drm.cpp	/^Connector::Connector(Device* dev, const drmModeConnector* connector)$/;"	f	class:DRM::Connector
Connector	src/drm.h	/^class Connector : public Object {$/;"	c	namespace:DRM
Crtc	src/drm.cpp	/^Crtc::Crtc(Device* dev, const drmModeCrtc* crtc, unsigned int index)$/;"	f	class:DRM::Crtc
Crtc	src/drm.h	/^class Crtc : public Object {$/;"	c	namespace:DRM
DRM	src/drm.cpp	/^namespace DRM {$/;"	n	file:
DRM	src/drm.h	/^namespace DRM {$/;"	n
DefaultDependencies	lib/systemd/system/twincam-first-frame.service	/^DefaultDependencies=no$/;"	k	section:Unit
DefaultDependencies	lib/systemd/system/twincam.service	/^DefaultDependencies=no$/;"	k	section:Unit
Description	lib/systemd/system/twincam-first-frame.service	/^Description=Show Twincam Boot Screen$/;"	k	section:Unit
Description	lib/systemd/system/twincam-quit.service	/^Description=Terminate Twincam Boot Screen$/;"	k	section:Unit
Description	lib/systemd/system/twincam.service	/^Description=Show Twincam Boot Screen$/;"	k	section:Unit
Device	src/drm.h	/^class Device {$/;"	c	namespace:DRM
Disconnected	src/drm.h	/^    Disconnected,$/;"	e	enum:DRM::Connector::Status
EPRINT	src/twncm_stdio.h	/^#define EPRINT(/;"	d
Encoder	src/drm.cpp	/^Encoder::Encoder(Device* dev, const drmModeEncoder* encoder)$/;"	f	class:DRM::Encoder
Encoder	src/drm.h	/^class Encoder : public Object {$/;"	c	namespace:DRM
Event	src/event_loop.cpp	/^EventLoop::Event::Event(const std::function<void()>& callback)$/;"	f	class:EventLoop::Event
Event	src/event_loop.h	/^  struct Event {$/;"	s	class:EventLoop
EventLoop	src/event_loop.cpp	/^EventLoop::EventLoop() {$/;"	f	class:EventLoop
EventLoop	src/event_loop.h	/^class EventLoop {$/;"	c
EventType	src/event_loop.h	/^  enum EventType {$/;"	g	class:EventLoop
ExcludeArch	twincam.spec	/^ExcludeArch: %ix86$/;"	t
ExecStart	lib/systemd/system/twincam-first-frame.service	/^ExecStart=\/usr\/bin\/twincam -d -s -u$/;"	k	section:Service
ExecStart	lib/systemd/system/twincam-quit.service	/^ExecStart=-\/usr\/bin\/twincam -k$/;"	k	section:Service
ExecStart	lib/systemd/system/twincam.service	/^ExecStart=\/usr\/bin\/twincam -d -s -u$/;"	k	section:Service
FileSink	src/file_sink.cpp	/^FileSink::FileSink($/;"	f	class:FileSink
FileSink	src/file_sink.h	/^class FileSink : public FrameSink {$/;"	c
FlagAllowModeset	src/drm.h	/^    FlagAllowModeset = (1 << 0),$/;"	e	enum:DRM::AtomicRequest::Flags
FlagAsync	src/drm.h	/^    FlagAsync = (1 << 1),$/;"	e	enum:DRM::AtomicRequest::Flags
Flags	src/drm.h	/^  enum Flags {$/;"	g	class:DRM::AtomicRequest
FrameBuffer	src/drm.cpp	/^FrameBuffer::FrameBuffer(Device* dev) : Object(dev, 0, Object::TypeFb) {}$/;"	f	class:DRM::FrameBuffer
FrameBuffer	src/drm.h	/^class FrameBuffer : public Object {$/;"	c	namespace:DRM
FrameSink	src/frame_sink.h	/^class FrameSink {$/;"	c
HEAD	src/twncm_stdio.h	/^#define HEAD(/;"	d
IO_METHOD_MMAP	src/first_frame.c	/^  IO_METHOD_MMAP,$/;"	e	enum:io_method	file:
IO_METHOD_READ	src/first_frame.c	/^  IO_METHOD_READ,$/;"	e	enum:io_method	file:
IO_METHOD_USERPTR	src/first_frame.c	/^  IO_METHOD_USERPTR,$/;"	e	enum:io_method	file:
IgnoreOnIsolate	lib/systemd/system/twincam-first-frame.service	/^IgnoreOnIsolate=true$/;"	k	section:Unit
IgnoreOnIsolate	lib/systemd/system/twincam.service	/^IgnoreOnIsolate=true$/;"	k	section:Unit
Image	src/image.h	/^class Image {$/;"	c
JpegErrorManager	src/jpeg_error_manager.cpp	/^JpegErrorManager::JpegErrorManager(struct jpeg_decompress_struct& cinfo) {$/;"	f	class:JpegErrorManager
JpegErrorManager	src/jpeg_error_manager.h	/^struct JpegErrorManager {$/;"	s
KMSSink	src/kms_sink.cpp	/^KMSSink::KMSSink(const std::string& connectorName) {$/;"	f	class:KMSSink
KMSSink	src/kms_sink.h	/^class KMSSink : public FrameSink {$/;"	c
KillMode	lib/systemd/system/twincam-first-frame.service	/^KillMode=mixed$/;"	k	section:Service
KillMode	lib/systemd/system/twincam.service	/^KillMode=mixed$/;"	k	section:Service
License	twincam.spec	/^License:       GPLv2$/;"	t
MapMode	src/image.h	/^  enum class MapMode {$/;"	g	class:Image
MappedBufferInfo	src/image.cpp	/^  struct MappedBufferInfo {$/;"	s	function:Image::fromFrameBuffer	file:
Mode	src/drm.cpp	/^Mode::Mode(const drmModeModeInfo& mode) : drmModeModeInfo(mode) {}$/;"	f	class:DRM::Mode
Mode	src/drm.h	/^class Mode : public drmModeModeInfo {$/;"	c	namespace:DRM
Name	twincam.spec	/^Name:          twincam$/;"	t
Object	src/drm.cpp	/^Object::Object(Device* dev, uint32_t id, Type type)$/;"	f	class:DRM::Object
Object	src/drm.h	/^class Object {$/;"	c	namespace:DRM
PRINT	src/first_frame.c	/^#define PRINT(/;"	d	file:
PRINT	src/twncm_stdio.h	/^#define PRINT(/;"	d
PRINT_FUNC	src/uptime.h	/^#define PRINT_FUNC(/;"	d
Plane	src/drm.cpp	/^Plane::Plane(Device* dev, const drmModePlane* plane)$/;"	f	class:DRM::Plane
Plane	src/drm.h	/^  struct Plane {$/;"	s	class:DRM::FrameBuffer
Plane	src/drm.h	/^class Plane : public Object {$/;"	c	namespace:DRM
Property	src/drm.cpp	/^Property::Property(Device* dev, drmModePropertyRes* property)$/;"	f	class:DRM::Property
Property	src/drm.h	/^class Property : public Object {$/;"	c	namespace:DRM
PropertyValue	src/drm.h	/^  PropertyValue(uint32_t id, uint64_t value) : id_(id), value_(value) {}$/;"	f	class:DRM::PropertyValue
PropertyValue	src/drm.h	/^class PropertyValue {$/;"	c	namespace:DRM
Read	src/event_loop.h	/^    Read = 1,$/;"	e	enum:EventLoop::EventType
ReadOnly	src/image.h	/^    ReadOnly = 1 << 0,$/;"	e	enum:Image::MapMode
ReadWrite	src/image.h	/^    ReadWrite = ReadOnly | WriteOnly,$/;"	e	enum:Image::MapMode
Release	twincam.spec	/^Release:       4%{?dist}$/;"	t
RemainAfterExit	lib/systemd/system/twincam-first-frame.service	/^RemainAfterExit=yes$/;"	k	section:Service
RemainAfterExit	lib/systemd/system/twincam-quit.service	/^RemainAfterExit=yes$/;"	k	section:Service
RemainAfterExit	lib/systemd/system/twincam.service	/^RemainAfterExit=yes$/;"	k	section:Service
Request	src/kms_sink.h	/^    Request(DRM::AtomicRequest* drmRequest, libcamera::Request* camRequest)$/;"	f	class:KMSSink::Request
Request	src/kms_sink.h	/^  class Request {$/;"	c	class:KMSSink
SDLSink	src/sdl_sink.cpp	/^SDLSink::SDLSink()$/;"	f	class:SDLSink
SDLSink	src/sdl_sink.h	/^class SDLSink : public FrameSink {$/;"	c
SDLTexture	src/sdl_texture.cpp	/^SDLTexture::SDLTexture(const SDL_Rect& rect,$/;"	f	class:SDLTexture
SDLTexture	src/sdl_texture.h	/^class SDLTexture {$/;"	c
SDLTextureMJPG	src/sdl_texture_mjpg.cpp	/^SDLTextureMJPG::SDLTextureMJPG(const SDL_Rect& rect)$/;"	f	class:SDLTextureMJPG
SDLTextureMJPG	src/sdl_texture_mjpg.h	/^class SDLTextureMJPG : public SDLTexture {$/;"	c
SDLTextureYUYV	src/sdl_texture_yuyv.cpp	/^SDLTextureYUYV::SDLTextureYUYV(const SDL_Rect& rect, unsigned int stride)$/;"	f	class:SDLTextureYUYV
SDLTextureYUYV	src/sdl_texture_yuyv.h	/^class SDLTextureYUYV : public SDLTexture {$/;"	c
STRING_PRINTF	src/twncm_stdio.h	/^#define STRING_PRINTF(/;"	d
SendSIGKILL	lib/systemd/system/twincam-first-frame.service	/^SendSIGKILL=no$/;"	k	section:Service
SendSIGKILL	lib/systemd/system/twincam.service	/^SendSIGKILL=no$/;"	k	section:Service
Service	lib/systemd/system/twincam-first-frame.service	/^[Service]$/;"	s
Service	lib/systemd/system/twincam-quit.service	/^[Service]$/;"	s
Service	lib/systemd/system/twincam.service	/^[Service]$/;"	s
Source0	twincam.spec	/^Source0:       %{url}\/archive\/%{version}\/%{name}-%{version}.tar.gz$/;"	t
Status	src/drm.h	/^  enum Status {$/;"	g	class:DRM::Connector
Summary	twincam.spec	/^Summary:       A lightweight camera application$/;"	t
TimeoutSec	lib/systemd/system/twincam-quit.service	/^TimeoutSec=20$/;"	k	section:Service
To build, install and run twincam	README.md	/^# To build, install and run twincam$/;"	c
Type	lib/systemd/system/twincam-first-frame.service	/^Type=simple$/;"	k	section:Service
Type	lib/systemd/system/twincam-quit.service	/^Type=oneshot$/;"	k	section:Service
Type	lib/systemd/system/twincam.service	/^Type=simple$/;"	k	section:Service
Type	src/drm.h	/^  enum Type {$/;"	g	class:DRM::Object
Type	src/drm.h	/^  enum Type {$/;"	g	class:DRM::Plane
Type	src/drm.h	/^  enum Type {$/;"	g	class:DRM::Property
TypeAny	src/drm.h	/^    TypeAny = DRM_MODE_OBJECT_ANY,$/;"	e	enum:DRM::Object::Type
TypeBitmask	src/drm.h	/^    TypeBitmask,$/;"	e	enum:DRM::Property::Type
TypeBlob	src/drm.h	/^    TypeBlob = DRM_MODE_OBJECT_BLOB,$/;"	e	enum:DRM::Object::Type
TypeBlob	src/drm.h	/^    TypeBlob,$/;"	e	enum:DRM::Property::Type
TypeConnector	src/drm.h	/^    TypeConnector = DRM_MODE_OBJECT_CONNECTOR,$/;"	e	enum:DRM::Object::Type
TypeCrtc	src/drm.h	/^    TypeCrtc = DRM_MODE_OBJECT_CRTC,$/;"	e	enum:DRM::Object::Type
TypeCursor	src/drm.h	/^    TypeCursor,$/;"	e	enum:DRM::Plane::Type
TypeEncoder	src/drm.h	/^    TypeEncoder = DRM_MODE_OBJECT_ENCODER,$/;"	e	enum:DRM::Object::Type
TypeEnum	src/drm.h	/^    TypeEnum,$/;"	e	enum:DRM::Property::Type
TypeFb	src/drm.h	/^    TypeFb = DRM_MODE_OBJECT_FB,$/;"	e	enum:DRM::Object::Type
TypeMode	src/drm.h	/^    TypeMode = DRM_MODE_OBJECT_MODE,$/;"	e	enum:DRM::Object::Type
TypeObject	src/drm.h	/^    TypeObject,$/;"	e	enum:DRM::Property::Type
TypeOverlay	src/drm.h	/^    TypeOverlay,$/;"	e	enum:DRM::Plane::Type
TypePlane	src/drm.h	/^    TypePlane = DRM_MODE_OBJECT_PLANE,$/;"	e	enum:DRM::Object::Type
TypePrimary	src/drm.h	/^    TypePrimary,$/;"	e	enum:DRM::Plane::Type
TypeProperty	src/drm.h	/^    TypeProperty = DRM_MODE_OBJECT_PROPERTY,$/;"	e	enum:DRM::Object::Type
TypeRange	src/drm.h	/^    TypeRange,$/;"	e	enum:DRM::Property::Type
TypeSignedRange	src/drm.h	/^    TypeSignedRange,$/;"	e	enum:DRM::Property::Type
TypeUnknown	src/drm.h	/^    TypeUnknown = 0,$/;"	e	enum:DRM::Property::Type
URL	twincam.spec	/^URL:           https:\/\/github.com\/ericcurtin\/twincam$/;"	t
Unit	lib/systemd/system/twincam-first-frame.service	/^[Unit]$/;"	s
Unit	lib/systemd/system/twincam-quit.service	/^[Unit]$/;"	s
Unit	lib/systemd/system/twincam.service	/^[Unit]$/;"	s
Unknown	src/drm.h	/^    Unknown,$/;"	e	enum:DRM::Connector::Status
VERBOSE_PRINT	src/twncm_stdio.h	/^#define VERBOSE_PRINT(/;"	d
Version	twincam.spec	/^Version:       0.5$/;"	t
Write	src/event_loop.h	/^    Write = 2,$/;"	e	enum:EventLoop::EventType
WriteOnly	src/image.h	/^    WriteOnly = 1 << 1,$/;"	e	enum:Image::MapMode
__anon3074ccf00111	src/drm.cpp	/^namespace {$/;"	n	namespace:DRM	file:
__anon3074ccf00202	src/drm.cpp	/^                     [=](const Encoder& e) { return e.id() == encoderId; });$/;"	f	function:DRM::Connector::Connector	file:
__anonde12f6390102	src/camera_session.cpp	/^      [request, this]() { processRequest(request); });$/;"	f	function:CameraSession::requestComplete	file:
active_	src/kms_sink.h	/^  std::unique_ptr<Request> active_;$/;"	m	class:KMSSink	typeref:typename:std::unique_ptr<Request>
addFdEvent	src/event_loop.cpp	/^void EventLoop::addFdEvent(int fd,$/;"	f	class:EventLoop	typeref:typename:void
addProperty	src/drm.cpp	/^int AtomicRequest::addProperty(const Object* object,$/;"	f	class:DRM::AtomicRequest	typeref:typename:int
addProperty	src/drm.cpp	/^int AtomicRequest::addProperty(uint32_t object,$/;"	f	class:DRM::AtomicRequest	typeref:typename:int
addTimerEvent	src/event_loop.cpp	/^void EventLoop::addTimerEvent(const std::chrono::microseconds period,$/;"	f	class:EventLoop	typeref:typename:void
address	src/image.cpp	/^    uint8_t* address = nullptr;$/;"	m	struct:Image::fromFrameBuffer::MappedBufferInfo	typeref:typename:uint8_t *	file:
allocator_	src/camera_session.h	/^  std::unique_ptr<libcamera::FrameBufferAllocator> allocator_;$/;"	m	class:CameraSession	typeref:typename:std::unique_ptr<libcamera::FrameBufferAllocator>
app_	src/twincam.cpp	/^  static CamApp* app_;$/;"	m	class:CamApp	typeref:typename:CamApp *	file:
app_	src/twincam.cpp	/^CamApp* CamApp::app_ = nullptr;$/;"	m	class:CamApp	typeref:typename:CamApp *
base_	src/event_loop.h	/^  struct event_base* base_;$/;"	m	class:EventLoop	typeref:struct:event_base *
benchmarks	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection.information
blobs	src/drm.h	/^  std::vector<uint32_t> blobs() const { return blobs_; }$/;"	f	class:DRM::Property	typeref:typename:std::vector<uint32_t>
blobs_	src/drm.h	/^  std::vector<uint32_t> blobs_;$/;"	m	class:DRM::Property	typeref:typename:std::vector<uint32_t>
buffer	src/first_frame.c	/^struct buffer {$/;"	s	file:
buffers	src/first_frame.c	/^struct buffer* buffers;$/;"	v	typeref:struct:buffer *
buffers_	src/kms_sink.h	/^  std::map<libcamera::FrameBuffer*, std::unique_ptr<DRM::FrameBuffer>> buffers_;$/;"	m	class:KMSSink	typeref:typename:std::map<libcamera::FrameBuffer *,std::unique_ptr<DRM::FrameBuffer>>
build	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:directories
build	tests/build_twincam.sh	/^build() {$/;"	f
build_by_default	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	b	object:0
build_files_updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b
buildoptions	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection.information
buildsystem_files	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection.information
callLater	src/event_loop.cpp	/^void EventLoop::callLater(const std::function<void()>& func) {$/;"	f	class:EventLoop	typeref:typename:void
callback_	src/event_loop.h	/^    std::function<void()> callback_;$/;"	m	struct:EventLoop::Event	typeref:typename:std::function<void ()>
calls_	src/event_loop.h	/^  std::list<std::function<void()>> calls_;$/;"	m	class:EventLoop	typeref:typename:std::list<std::function<void ()>>
camRequest_	src/kms_sink.h	/^    libcamera::Request* camRequest_;$/;"	m	class:KMSSink::Request	typeref:typename:libcamera::Request *
camera	src/camera_session.h	/^  libcamera::Camera* camera() { return camera_.get(); }$/;"	f	class:CameraSession	typeref:typename:libcamera::Camera *
camera	src/twincam.h	/^  long camera = -1;$/;"	m	struct:options	typeref:typename:long
cameraIndex_	src/camera_session.h	/^  unsigned int cameraIndex_ = 0;$/;"	m	class:CameraSession	typeref:typename:unsigned int
cameraName	src/twincam.cpp	/^std::string CamApp::cameraName(const Camera* camera) {$/;"	f	class:CamApp	typeref:typename:std::string
camera_	src/camera_session.h	/^  std::shared_ptr<libcamera::Camera> camera_;$/;"	m	class:CameraSession	typeref:typename:std::shared_ptr<libcamera::Camera>
captureCount_	src/camera_session.h	/^  unsigned int captureCount_ = 0;$/;"	m	class:CameraSession	typeref:typename:unsigned int
captureDone	src/camera_session.h	/^  libcamera::Signal<> captureDone;$/;"	m	class:CameraSession	typeref:typename:libcamera::Signal<>
check	lib/dracut/modules.d/81twincam/module-setup-first-frame.sh	/^check() {$/;"	f
check	lib/dracut/modules.d/81twincam/module-setup-minimal.sh	/^check() {$/;"	f
check	lib/dracut/modules.d/81twincam/module-setup.sh	/^check() {$/;"	f
checkUdevDevice	src/twincam.cpp	/^static int checkUdevDevice(struct udev_device* dev, const char* subsys) {$/;"	f	typeref:typename:int	file:
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:10
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:11
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:14
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:16
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:18
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:19
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:2
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:24
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:29
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:3
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:31
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:33
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:37
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:4
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:40
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:43
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:46
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:49
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:52
choices	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:7
chrootThis	src/twincam.cpp	/^static void chrootThis([[maybe_unused]] int signal) {$/;"	f	typeref:typename:void	file:
clean	tests/sonar.sh	/^clean() {$/;"	f
cleanup	src/twincam.cpp	/^void CamApp::cleanup() const {$/;"	f	class:CamApp	typeref:typename:void
clock	src/drm.h	/^  uint32_t clock() const { return crtc_->mode.clock; }$/;"	f	class:DRM::Crtc	typeref:typename:uint32_t
close_device	src/first_frame.c	/^static void close_device(void) {$/;"	f	typeref:typename:void	file:
cm_	src/camera_session.h	/^  const libcamera::CameraManager* const cm_ = nullptr;$/;"	m	class:CameraSession	typeref:typename:const libcamera::CameraManager * const
cm_	src/twincam.cpp	/^  std::unique_ptr<CameraManager> cm_;$/;"	m	class:CamApp	typeref:typename:std::unique_ptr<CameraManager>	file:
collectPropertyIDsAndCreatePropertyInstances	src/drm.cpp	/^void Device::collectPropertyIDsAndCreatePropertyInstances($/;"	f	class:DRM::Device	typeref:typename:void
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:0
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:1
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:10
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:11
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:12
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:13
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:14
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:2
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:3
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:4
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:5
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:6
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:7
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:8
command	build/compile_commands.json	/^    "command": "ccache c++ -Itwincam.p -I. -I.. -I\/usr\/include\/libcamera -I\/usr\/include\/li/;"	s	object:9
commit	src/drm.cpp	/^int AtomicRequest::commit(unsigned int flags) {$/;"	f	class:DRM::AtomicRequest	typeref:typename:int
compile_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:0
compile_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:1
compile_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:2
compile_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:3
compile_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:4
compile_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:5
compiler	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	a	object:0.target_sources.0
config	src/camera_session.h	/^  libcamera::CameraConfiguration* config() { return config_.get(); }$/;"	f	class:CameraSession	typeref:typename:libcamera::CameraConfiguration *
config_	src/camera_session.h	/^  std::unique_ptr<libcamera::CameraConfiguration> config_;$/;"	m	class:CameraSession	typeref:typename:std::unique_ptr<libcamera::CameraConfiguration>
configure	src/file_sink.cpp	/^int FileSink::configure(const libcamera::CameraConfiguration& config) {$/;"	f	class:FileSink	typeref:typename:int
configure	src/frame_sink.cpp	/^int FrameSink::configure($/;"	f	class:FrameSink	typeref:typename:int
configure	src/kms_sink.cpp	/^int KMSSink::configure(const libcamera::CameraConfiguration& config) {$/;"	f	class:KMSSink	typeref:typename:int
configure	src/sdl_sink.cpp	/^int SDLSink::configure(const libcamera::CameraConfiguration& config) {$/;"	f	class:SDLSink	typeref:typename:int
configurePipeline	src/kms_sink.cpp	/^int KMSSink::configurePipeline(const libcamera::PixelFormat& format) {$/;"	f	class:KMSSink	typeref:typename:int
connectorType	src/drm.h	/^  uint32_t connectorType() const { return type_; }$/;"	f	class:DRM::Connector	typeref:typename:uint32_t
connectorTypeNames	src/drm.cpp	/^const std::map<uint32_t, const char*> connectorTypeNames{$/;"	v	namespace:DRM::__anon3074ccf00111	typeref:typename:const std::map<uint32_t,const char * >
connector_	src/kms_sink.h	/^  const DRM::Connector* connector_ = nullptr;$/;"	m	class:KMSSink	typeref:typename:const DRM::Connector *
connectors	src/drm.h	/^  const std::list<Connector>& connectors() const { return connectors_; }$/;"	f	class:DRM::Device	typeref:typename:const std::list<Connector> &
connectors_	src/drm.h	/^  std::list<Connector> connectors_;$/;"	m	class:DRM::Device	typeref:typename:std::list<Connector>
container_run	tests/run-all.sh	/^container_run() {$/;"	f
create	src/sdl_texture.cpp	/^int SDLTexture::create(SDL_Renderer* renderer) {$/;"	f	class:SDLTexture	typeref:typename:int
createFrameBuffer	src/drm.cpp	/^std::unique_ptr<FrameBuffer> Device::createFrameBuffer($/;"	f	class:DRM::Device	typeref:typename:std::unique_ptr<FrameBuffer>
crtc_	src/drm.h	/^  const drmModeCrtc* crtc_;$/;"	m	class:DRM::Crtc	typeref:typename:const drmModeCrtc *
crtc_	src/kms_sink.h	/^  const DRM::Crtc* crtc_ = nullptr;$/;"	m	class:KMSSink	typeref:typename:const DRM::Crtc *
crtcs	src/drm.h	/^  const std::list<Crtc>& crtcs() const { return crtcs_; }$/;"	f	class:DRM::Device	typeref:typename:const std::list<Crtc> &
crtcs_	src/drm.h	/^  std::list<Crtc> crtcs_;$/;"	m	class:DRM::Device	typeref:typename:std::list<Crtc>
data	src/image.cpp	/^Span<const uint8_t> Image::data(unsigned int plane) const {$/;"	f	class:Image	typeref:typename:Span<const uint8_t>
data	src/image.cpp	/^Span<uint8_t> Image::data(unsigned int plane) {$/;"	f	class:Image	typeref:typename:Span<uint8_t>
decompress	src/sdl_texture_mjpg.cpp	/^int SDLTextureMJPG::decompress(Span<const uint8_t>& data) { \/\/ tango$/;"	f	class:SDLTextureMJPG	typeref:typename:int
defined_in	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	object:0
dependencies	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection.information
depends	lib/dracut/modules.d/81twincam/module-setup.sh	/^depends() {$/;"	f
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:0
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:1
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:10
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:11
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:12
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:13
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:14
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:15
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:16
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:17
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:18
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:19
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:2
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:20
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:21
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:22
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:23
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:24
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:25
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:26
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:27
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:28
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:29
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:3
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:30
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:31
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:32
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:33
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:34
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:35
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:36
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:37
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:38
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:39
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:4
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:40
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:41
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:42
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:43
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:44
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:45
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:46
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:47
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:48
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:49
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:5
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:50
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:51
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:52
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:53
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:54
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:55
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:56
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:57
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:58
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:59
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:6
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:60
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:61
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:62
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:63
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:64
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:65
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:66
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:67
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:7
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:8
description	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:9
descriptive_name	build/meson-info/intro-projectinfo.json	/^{"version": "undefined", "descriptive_name": "twincam", "subproject_dir": "subprojects", "subpro/;"	s
destination	build/meson-info/intro-install_plan.json	/^{"targets": {"\/home\/sdunnaga\/projects\/twincam\/build\/twincam": {"destination": "{bindir}\/t/;"	s	object:targets./home/sdunnaga/projects/twincam/build/twincam
dev_	src/drm.h	/^  Device* dev_;$/;"	m	class:DRM::AtomicRequest	typeref:typename:Device *
dev_	src/drm.h	/^  Device* dev_;$/;"	m	class:DRM::Object	typeref:typename:Device *
dev_	src/kms_sink.h	/^  DRM::Device dev_;$/;"	m	class:KMSSink	typeref:typename:DRM::Device
dev_exists	src/first_frame.c	/^static bool dev_exists(const char* fn) {$/;"	f	typeref:typename:bool	file:
dev_exists	src/twincam.cpp	/^static bool dev_exists(const char* fn) {$/;"	f	typeref:typename:bool	file:
dev_name	src/first_frame.c	/^static char dev_name[16];$/;"	v	typeref:typename:char[16]	file:
device	src/drm.h	/^  Device* device() const { return dev_; }$/;"	f	class:DRM::AtomicRequest	typeref:typename:Device *
device	src/drm.h	/^  Device* device() const { return dev_; }$/;"	f	class:DRM::Object	typeref:typename:Device *
directories	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:0
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:1
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:10
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:11
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:12
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:13
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:14
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:2
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:3
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:4
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:5
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:6
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:7
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:8
directory	build/compile_commands.json	/^    "directory": "\/home\/sdunnaga\/projects\/twincam\/build",$/;"	s	object:9
dispatch	src/event_loop.cpp	/^void EventLoop::Event::dispatch([[maybe_unused]] int fd,$/;"	f	class:EventLoop::Event	typeref:typename:void
dispatchCall	src/event_loop.cpp	/^void EventLoop::dispatchCall() {$/;"	f	class:EventLoop	typeref:typename:void
dispatchCallback	src/event_loop.cpp	/^void EventLoop::dispatchCallback([[maybe_unused]] evutil_socket_t fd,$/;"	f	class:EventLoop	typeref:typename:void
dmabufLength	src/image.cpp	/^    size_t dmabufLength = 0;$/;"	m	struct:Image::fromFrameBuffer::MappedBufferInfo	typeref:typename:size_t	file:
dracutdir	twincam.spec	/^%global dracutdir %(pkg-config --variable=dracutdir dracut)$/;"	g
drm	src/twincam.h	/^  bool drm = false;$/;"	m	struct:options	typeref:typename:bool
drmEvent	src/drm.cpp	/^void Device::drmEvent() const {$/;"	f	class:DRM::Device	typeref:typename:void
drmRequest_	src/kms_sink.h	/^    std::unique_ptr<DRM::AtomicRequest> drmRequest_;$/;"	m	class:KMSSink::Request	typeref:typename:std::unique_ptr<DRM::AtomicRequest>
duration	src/event_loop.h	/^  using duration = std::chrono::steady_clock::duration;$/;"	t	class:EventLoop	typeref:typename:std::chrono::steady_clock::duration
encoderType	src/drm.h	/^  uint32_t encoderType() const { return type_; }$/;"	f	class:DRM::Encoder	typeref:typename:uint32_t
encoders	src/drm.h	/^  const std::list<Encoder>& encoders() const { return encoders_; }$/;"	f	class:DRM::Device	typeref:typename:const std::list<Encoder> &
encoders	src/drm.h	/^  const std::vector<const Encoder*>& encoders() const { return encoders_; }$/;"	f	class:DRM::Connector	typeref:typename:const std::vector<const Encoder * > &
encoders_	src/drm.h	/^  std::list<Encoder> encoders_;$/;"	m	class:DRM::Device	typeref:typename:std::list<Encoder>
encoders_	src/drm.h	/^  std::vector<const Encoder*> encoders_;$/;"	m	class:DRM::Connector	typeref:typename:std::vector<const Encoder * >
enums	src/drm.h	/^  const std::map<__u64, std::string>& enums() const { return enums_; }$/;"	f	class:DRM::Property	typeref:typename:const std::map<__u64,std::string> &
enums_	src/drm.h	/^  std::map<__u64, std::string> enums_;$/;"	m	class:DRM::Property	typeref:typename:std::map<__u64,std::string>
errmgr_	src/jpeg_error_manager.h	/^  struct jpeg_error_mgr errmgr_;$/;"	m	struct:JpegErrorManager	typeref:struct:jpeg_error_mgr
errno_exit	src/first_frame.c	/^static void errno_exit(const char* s) {$/;"	f	typeref:typename:void	file:
error	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b
errorExit	src/jpeg_error_manager.cpp	/^static void errorExit(j_common_ptr cinfo) {$/;"	f	typeref:typename:void	file:
escape_	src/jpeg_error_manager.h	/^  jmp_buf escape_;$/;"	m	struct:JpegErrorManager	typeref:typename:jmp_buf
event_	src/event_loop.h	/^    struct event* event_ = nullptr;$/;"	m	struct:EventLoop::Event	typeref:struct:event *
events_	src/event_loop.h	/^  std::list<std::unique_ptr<Event>> events_;$/;"	m	class:EventLoop	typeref:typename:std::list<std::unique_ptr<Event>>
exec	src/event_loop.cpp	/^int EventLoop::exec() {$/;"	f	class:EventLoop	typeref:typename:int
exec	src/twincam.cpp	/^int CamApp::exec() {$/;"	f	class:CamApp	typeref:typename:int
exit	src/event_loop.cpp	/^void EventLoop::exit(int code) {$/;"	f	class:EventLoop	typeref:typename:void
exitCode_	src/event_loop.h	/^  int exitCode_;$/;"	m	class:EventLoop	typeref:typename:int
extra_files	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	a	object:0
fd	src/drm.h	/^  int fd() const { return fd_; }$/;"	f	class:DRM::Device	typeref:typename:int
fd	src/first_frame.c	/^static int fd = -1;$/;"	v	typeref:typename:int	file:
fd_	src/drm.h	/^  int fd_ = -1;$/;"	m	class:DRM::Device	typeref:typename:int
file	build/compile_commands.json	/^    "file": "..\/src\/camera_session.cpp",$/;"	s	object:0
file	build/compile_commands.json	/^    "file": "..\/src\/drm.cpp",$/;"	s	object:8
file	build/compile_commands.json	/^    "file": "..\/src\/event_loop.cpp",$/;"	s	object:1
file	build/compile_commands.json	/^    "file": "..\/src\/file_sink.cpp",$/;"	s	object:7
file	build/compile_commands.json	/^    "file": "..\/src\/frame_sink.cpp",$/;"	s	object:5
file	build/compile_commands.json	/^    "file": "..\/src\/image.cpp",$/;"	s	object:6
file	build/compile_commands.json	/^    "file": "..\/src\/jpeg_error_manager.cpp",$/;"	s	object:13
file	build/compile_commands.json	/^    "file": "..\/src\/kms_sink.cpp",$/;"	s	object:9
file	build/compile_commands.json	/^    "file": "..\/src\/sdl_sink.cpp",$/;"	s	object:10
file	build/compile_commands.json	/^    "file": "..\/src\/sdl_texture.cpp",$/;"	s	object:11
file	build/compile_commands.json	/^    "file": "..\/src\/sdl_texture_mjpg.cpp",$/;"	s	object:14
file	build/compile_commands.json	/^    "file": "..\/src\/sdl_texture_yuyv.cpp",$/;"	s	object:12
file	build/compile_commands.json	/^    "file": "..\/src\/twincam.cpp",$/;"	s	object:2
file	build/compile_commands.json	/^    "file": "..\/src\/twncm_fnctl.cpp",$/;"	s	object:3
file	build/compile_commands.json	/^    "file": "..\/src\/uptime.cpp",$/;"	s	object:4
file	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.information.benchmarks
file	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.information.buildoptions
file	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.information.buildsystem_files
file	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.information.dependencies
file	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.information.install_plan
file	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.information.installed
file	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.information.projectinfo
file	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.information.targets
file	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.information.tests
filename	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	a	object:0
filename	src/twincam.h	/^  std::string filename;$/;"	m	struct:options	typeref:typename:std::string
filename_	src/file_sink.h	/^  std::string filename_;$/;"	m	class:FileSink	typeref:typename:std::string
findRequestedConnector	src/kms_sink.cpp	/^void KMSSink::findRequestedConnector(const std::string& connectorName) {$/;"	f	class:KMSSink	typeref:typename:void
flags_	src/drm.h	/^  uint32_t flags_;$/;"	m	class:DRM::Property	typeref:typename:uint32_t
force_format	src/first_frame.c	/^static int force_format;$/;"	v	typeref:typename:int	file:
format_	src/kms_sink.h	/^  libcamera::PixelFormat format_;$/;"	m	class:KMSSink	typeref:typename:libcamera::PixelFormat
formats	src/drm.h	/^  const std::vector<uint32_t>& formats() const { return formats_; }$/;"	f	class:DRM::Plane	typeref:typename:const std::vector<uint32_t> &
formats_	src/drm.h	/^  std::vector<uint32_t> formats_;$/;"	m	class:DRM::Plane	typeref:typename:std::vector<uint32_t>
frame_count	src/first_frame.c	/^static int frame_count = 1;$/;"	v	typeref:typename:int	file:
fromFrameBuffer	src/image.cpp	/^std::unique_ptr<Image> Image::fromFrameBuffer(const FrameBuffer* buffer,$/;"	f	class:Image	typeref:typename:std::unique_ptr<Image>
full	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:introspection.version
full	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:meson_version
generated_sources	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	a	object:0.target_sources.0
get	src/sdl_texture.h	/^  SDL_Texture* get() const { return ptr_; }$/;"	f	class:SDLTexture	typeref:typename:SDL_Texture *
getResources	src/drm.cpp	/^int Device::getResources() {$/;"	f	class:DRM::Device	typeref:typename:int
get_monotonic	src/first_frame.c	/^static float get_monotonic() {$/;"	f	typeref:typename:float	file:
handle	src/drm.h	/^    uint32_t handle;$/;"	m	struct:DRM::FrameBuffer::Plane	typeref:typename:uint32_t
id	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	object:0
id	src/drm.h	/^  uint32_t id() const { return id_; }$/;"	f	class:DRM::Object	typeref:typename:uint32_t
id	src/drm.h	/^  uint32_t id() const { return id_; }$/;"	f	class:DRM::PropertyValue	typeref:typename:uint32_t
id_	src/drm.h	/^  uint32_t id_;$/;"	m	class:DRM::Object	typeref:typename:uint32_t
id_	src/drm.h	/^  uint32_t id_;$/;"	m	class:DRM::PropertyValue	typeref:typename:uint32_t
incdir	meson.build	/^incdir = include_directories('\/usr\/include\/libcamera')$/;"	V
index	src/drm.h	/^  unsigned int index() const { return index_; }$/;"	f	class:DRM::Crtc	typeref:typename:unsigned int
index_	src/drm.h	/^  unsigned int index_;$/;"	m	class:DRM::Crtc	typeref:typename:unsigned int
info	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:directories
information	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection
init	src/camera_session.cpp	/^int CameraSession::init() {$/;"	f	class:CameraSession	typeref:typename:int
init	src/drm.cpp	/^int Device::init() {$/;"	f	class:DRM::Device	typeref:typename:int
init	src/twincam.cpp	/^int CamApp::init() {$/;"	f	class:CamApp	typeref:typename:int
init_	src/sdl_sink.h	/^  bool init_;$/;"	m	class:SDLSink	typeref:typename:bool
init_device	src/first_frame.c	/^static void init_device(void) {$/;"	f	typeref:typename:void	file:
init_mmap	src/first_frame.c	/^static void init_mmap(void) {$/;"	f	typeref:typename:void	file:
init_read	src/first_frame.c	/^static void init_read(unsigned int buffer_size) {$/;"	f	typeref:typename:void	file:
init_time	src/first_frame.c	/^static float init_time;$/;"	v	typeref:typename:float	file:
init_time	src/uptime.cpp	/^float init_time = 0;$/;"	v	typeref:typename:float
init_userp	src/first_frame.c	/^static void init_userp(unsigned int buffer_size) {$/;"	f	typeref:typename:void	file:
install	lib/dracut/modules.d/81twincam/module-setup-first-frame.sh	/^install() {$/;"	f
install	lib/dracut/modules.d/81twincam/module-setup-minimal.sh	/^install() {$/;"	f
install	lib/dracut/modules.d/81twincam/module-setup.sh	/^install() {$/;"	f
install_filename	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	a	object:0
install_plan	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection.information
installed	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	b	object:0
installed	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection.information
installkernel	lib/dracut/modules.d/81twincam/module-setup-first-frame.sh	/^installkernel() {$/;"	f
installkernel	lib/dracut/modules.d/81twincam/module-setup-minimal.sh	/^installkernel() {$/;"	f
installkernel	lib/dracut/modules.d/81twincam/module-setup.sh	/^installkernel() {$/;"	f
instance	src/event_loop.cpp	/^EventLoop* EventLoop::instance() {$/;"	f	class:EventLoop	typeref:typename:EventLoop *
instance	src/twincam.cpp	/^CamApp* CamApp::instance() {$/;"	f	class:CamApp	typeref:typename:CamApp *
instance_	src/event_loop.cpp	/^EventLoop* EventLoop::instance_ = nullptr;$/;"	m	class:EventLoop	typeref:typename:EventLoop *
instance_	src/event_loop.h	/^  static EventLoop* instance_;$/;"	m	class:EventLoop	typeref:typename:EventLoop *
introspection	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o
io	src/first_frame.c	/^static enum io_method io = IO_METHOD_MMAP;$/;"	v	typeref:enum:io_method	file:
io_method	src/first_frame.c	/^enum io_method {$/;"	g	file:
isImmutable	src/drm.h	/^  bool isImmutable() const { return flags_ & DRM_MODE_PROP_IMMUTABLE; }$/;"	f	class:DRM::Property	typeref:typename:bool
isValid	src/camera_session.h	/^  bool isValid() const { return config_ != nullptr; }$/;"	f	class:CameraSession	typeref:typename:bool
isValid	src/drm.h	/^  bool isValid() const { return valid_; }$/;"	f	class:DRM::AtomicRequest	typeref:typename:bool
language	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	object:0.target_sources.0
last_	src/camera_session.h	/^  uint64_t last_ = 0;$/;"	m	class:CameraSession	typeref:typename:uint64_t
length	src/first_frame.c	/^  size_t length;$/;"	m	struct:buffer	typeref:typename:size_t	file:
libcamera	meson.build	/^libcamera = dependency('libcamera')$/;"	V
libcamera	src/drm.h	/^namespace libcamera {$/;"	n
libcamera	src/frame_sink.h	/^namespace libcamera {$/;"	n
libcamera	src/image.h	/^namespace libcamera {$/;"	n
libdrm	meson.build	/^libdrm = dependency('libdrm', required : false)$/;"	V
libevent	meson.build	/^libevent = dependency('libevent_pthreads')$/;"	V
libjpeg	meson.build	/^libjpeg = dependency('libjpeg', required : false)$/;"	V
libsdl2	meson.build	/^libsdl2 = dependency('SDL2', required : false)$/;"	V
libudev	meson.build	/^libudev = dependency('libudev', required : false)$/;"	V
link_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:0
link_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:1
link_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:2
link_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:3
link_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:4
link_args	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	a	object:5
lock_	src/event_loop.h	/^  std::mutex lock_;$/;"	m	class:EventLoop	typeref:typename:std::mutex
lock_	src/kms_sink.h	/^  std::mutex lock_;$/;"	m	class:KMSSink	typeref:typename:std::mutex
long_options	src/first_frame.c	/^static const struct option long_options[] = {$/;"	v	typeref:typename:const struct option[]	file:
loop_	src/twincam.cpp	/^  EventLoop loop_;$/;"	m	class:CamApp	typeref:typename:EventLoop	file:
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:0
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:1
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:10
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:11
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:12
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:13
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:14
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:15
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:16
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:17
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:18
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:19
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:2
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:20
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:21
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:22
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:23
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:24
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:25
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:26
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:27
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:28
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:29
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:3
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:30
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:31
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:32
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:33
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:34
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:35
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:36
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:37
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:38
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:39
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:4
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:40
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:41
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:42
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:43
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:44
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:45
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:46
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:47
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:48
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:49
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:5
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:50
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:51
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:52
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:53
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:54
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:55
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:56
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:57
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:58
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:59
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:6
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:60
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:61
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:62
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:63
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:64
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:65
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:66
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:67
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:7
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:8
machine	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:9
main	build/meson-private/sanitycheckc.c	/^int main(void) { int class=0; return class; }$/;"	f	typeref:typename:int
main	build/meson-private/sanitycheckcpp.cc	/^class breakCCompiler;int main(void) { return 0; }$/;"	f	typeref:typename:int
main	src/first_frame.c	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main	src/twincam.cpp	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
mainloop	src/first_frame.c	/^static void mainloop(void) {$/;"	f	typeref:typename:void	file:
major	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	n	object:introspection.version
major	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	n	object:meson_version
mapBuffer	src/file_sink.cpp	/^void FileSink::mapBuffer(FrameBuffer* buffer) {$/;"	f	class:FileSink	typeref:typename:void
mapBuffer	src/frame_sink.cpp	/^void FrameSink::mapBuffer([[maybe_unused]] libcamera::FrameBuffer* buffer) {}$/;"	f	class:FrameSink	typeref:typename:void
mapBuffer	src/kms_sink.cpp	/^void KMSSink::mapBuffer(libcamera::FrameBuffer* buffer) {$/;"	f	class:KMSSink	typeref:typename:void
mapBuffer	src/sdl_sink.cpp	/^void SDLSink::mapBuffer(FrameBuffer* buffer) {$/;"	f	class:SDLSink	typeref:typename:void
mapLength	src/image.cpp	/^    size_t mapLength = 0;$/;"	m	struct:Image::fromFrameBuffer::MappedBufferInfo	typeref:typename:size_t	file:
mappedBuffers_	src/file_sink.h	/^  std::map<libcamera::FrameBuffer*, std::unique_ptr<Image>> mappedBuffers_;$/;"	m	class:FileSink	typeref:typename:std::map<libcamera::FrameBuffer *,std::unique_ptr<Image>>
mappedBuffers_	src/sdl_sink.h	/^  std::map<libcamera::FrameBuffer*, std::unique_ptr<Image>> mappedBuffers_;$/;"	m	class:SDLSink	typeref:typename:std::map<libcamera::FrameBuffer *,std::unique_ptr<Image>>
maps_	src/image.h	/^  std::vector<libcamera::Span<uint8_t>> maps_;$/;"	m	class:Image	typeref:typename:std::vector<libcamera::Span<uint8_t>>
meson_version	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o
minor	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	n	object:introspection.version
minor	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	n	object:meson_version
mode_	src/kms_sink.h	/^  const DRM::Mode* mode_ = nullptr;$/;"	m	class:KMSSink	typeref:typename:const DRM::Mode *
modes	src/drm.h	/^  const std::vector<Mode>& modes() const { return modes_; }$/;"	f	class:DRM::Connector	typeref:typename:const std::vector<Mode> &
modes_	src/drm.h	/^  std::vector<Mode> modes_;$/;"	m	class:DRM::Connector	typeref:typename:std::vector<Mode>
n_buffers	src/first_frame.c	/^static unsigned int n_buffers;$/;"	v	typeref:typename:unsigned int	file:
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:0
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:1
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:10
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:11
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:12
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:13
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:14
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:15
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:16
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:17
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:18
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:19
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:2
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:20
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:21
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:22
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:23
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:24
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:25
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:26
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:27
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:28
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:29
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:3
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:30
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:31
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:32
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:33
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:34
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:35
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:36
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:37
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:38
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:39
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:4
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:40
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:41
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:42
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:43
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:44
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:45
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:46
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:47
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:48
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:49
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:5
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:50
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:51
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:52
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:53
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:54
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:55
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:56
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:57
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:58
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:59
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:6
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:60
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:61
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:62
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:63
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:64
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:65
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:66
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:67
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:7
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:8
name	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:9
name	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:0
name	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:1
name	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:2
name	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:3
name	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:4
name	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:5
name	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	object:0
name	src/drm.h	/^  const std::string& name() const { return name_; }$/;"	f	class:DRM::Connector	typeref:typename:const std::string &
name	src/drm.h	/^  const std::string& name() const { return name_; }$/;"	f	class:DRM::Property	typeref:typename:const std::string &
name_	src/drm.h	/^  std::string name_;$/;"	m	class:DRM::Connector	typeref:typename:std::string
name_	src/drm.h	/^  std::string name_;$/;"	m	class:DRM::Property	typeref:typename:std::string
numPlanes	src/image.cpp	/^unsigned int Image::numPlanes() const {$/;"	f	class:Image	typeref:typename:unsigned int
object	src/drm.cpp	/^const Object* Device::object(uint32_t id) {$/;"	f	class:DRM::Device	typeref:typename:const Object *
objects_	src/drm.h	/^  std::map<uint32_t, Object*> objects_;$/;"	m	class:DRM::Device	typeref:typename:std::map<uint32_t,Object * >
openCard	src/drm.cpp	/^static int openCard() {$/;"	f	namespace:DRM	typeref:typename:int	file:
open_device	src/first_frame.c	/^static void open_device(void) {$/;"	f	typeref:typename:void	file:
options	src/twincam.h	/^struct options {$/;"	s
opts	src/twincam.cpp	/^options opts;$/;"	v	typeref:typename:options
out_buf	src/first_frame.c	/^static int out_buf;$/;"	v	typeref:typename:int	file:
output	build/compile_commands.json	/^    "output": "twincam.p\/src_camera_session.cpp.o"$/;"	s	object:0
output	build/compile_commands.json	/^    "output": "twincam.p\/src_drm.cpp.o"$/;"	s	object:8
output	build/compile_commands.json	/^    "output": "twincam.p\/src_event_loop.cpp.o"$/;"	s	object:1
output	build/compile_commands.json	/^    "output": "twincam.p\/src_file_sink.cpp.o"$/;"	s	object:7
output	build/compile_commands.json	/^    "output": "twincam.p\/src_frame_sink.cpp.o"$/;"	s	object:5
output	build/compile_commands.json	/^    "output": "twincam.p\/src_image.cpp.o"$/;"	s	object:6
output	build/compile_commands.json	/^    "output": "twincam.p\/src_jpeg_error_manager.cpp.o"$/;"	s	object:13
output	build/compile_commands.json	/^    "output": "twincam.p\/src_kms_sink.cpp.o"$/;"	s	object:9
output	build/compile_commands.json	/^    "output": "twincam.p\/src_sdl_sink.cpp.o"$/;"	s	object:10
output	build/compile_commands.json	/^    "output": "twincam.p\/src_sdl_texture.cpp.o"$/;"	s	object:11
output	build/compile_commands.json	/^    "output": "twincam.p\/src_sdl_texture_mjpg.cpp.o"$/;"	s	object:14
output	build/compile_commands.json	/^    "output": "twincam.p\/src_sdl_texture_yuyv.cpp.o"$/;"	s	object:12
output	build/compile_commands.json	/^    "output": "twincam.p\/src_twincam.cpp.o"$/;"	s	object:2
output	build/compile_commands.json	/^    "output": "twincam.p\/src_twncm_fnctl.cpp.o"$/;"	s	object:3
output	build/compile_commands.json	/^    "output": "twincam.p\/src_uptime.cpp.o"$/;"	s	object:4
outputMessage	src/jpeg_error_manager.cpp	/^static void outputMessage([[maybe_unused]] j_common_ptr cinfo) {}$/;"	f	typeref:typename:void	file:
pageFlipComplete	src/drm.cpp	/^void Device::pageFlipComplete([[maybe_unused]] int fd,$/;"	f	class:DRM::Device	typeref:typename:void
parameters	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	a	object:0.target_sources.0
parse_args	src/camera_session.cpp	/^int CameraSession::parse_args() {$/;"	f	class:CameraSession	typeref:typename:int
patch	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	n	object:introspection.version
patch	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	n	object:meson_version
pending_	src/kms_sink.h	/^  std::unique_ptr<Request> pending_;$/;"	m	class:KMSSink	typeref:typename:std::unique_ptr<Request>
performAllDelayedSetupOfModeObjects	src/drm.cpp	/^int Device::performAllDelayedSetupOfModeObjects() {$/;"	f	class:DRM::Device	typeref:typename:int
pf	src/twincam.h	/^  std::string pf = "MJPEG";$/;"	m	struct:options	typeref:typename:std::string
pf	src/twincam.h	/^  std::string pf = "YUYV";$/;"	m	struct:options	typeref:typename:std::string
pid_read	src/twncm_fnctl.cpp	/^int pid_read(const int pidfile_fd, char* const buf) {$/;"	f	typeref:typename:int
pid_write	src/twncm_fnctl.cpp	/^int pid_write(const int pidfile_fd) {$/;"	f	typeref:typename:int
pitch_	src/sdl_texture.h	/^  int pitch_;$/;"	m	class:SDLTexture	typeref:typename:int
pixelFormat_	src/sdl_texture.h	/^  const SDL_PixelFormatEnum pixelFormat_;$/;"	m	class:SDLTexture	typeref:typename:const SDL_PixelFormatEnum
planeType	src/drm.h	/^  Type planeType() const { return type_; }$/;"	f	class:DRM::Plane	typeref:typename:Type
plane_	src/kms_sink.h	/^  const DRM::Plane* plane_ = nullptr;$/;"	m	class:KMSSink	typeref:typename:const DRM::Plane *
planes	src/drm.h	/^  const std::list<Plane>& planes() const { return planes_; }$/;"	f	class:DRM::Device	typeref:typename:const std::list<Plane> &
planes	src/drm.h	/^  const std::vector<const Plane*>& planes() const { return planes_; }$/;"	f	class:DRM::Crtc	typeref:typename:const std::vector<const Plane * > &
planes_	src/drm.h	/^  std::list<Plane> planes_;$/;"	m	class:DRM::Device	typeref:typename:std::list<Plane>
planes_	src/drm.h	/^  std::map<int, Plane> planes_;$/;"	m	class:DRM::FrameBuffer	typeref:typename:std::map<int,Plane>
planes_	src/drm.h	/^  std::vector<const Plane*> planes_;$/;"	m	class:DRM::Crtc	typeref:typename:std::vector<const Plane * >
planes_	src/image.h	/^  std::vector<libcamera::Span<uint8_t>> planes_;$/;"	m	class:Image	typeref:typename:std::vector<libcamera::Span<uint8_t>>
popCallList	src/event_loop.cpp	/^void EventLoop::popCallList(std::function<void()>& call) {$/;"	f	class:EventLoop	typeref:typename:void
possibleCrtcs	src/drm.h	/^  const std::vector<const Crtc*>& possibleCrtcs() const {$/;"	f	class:DRM::Encoder	typeref:typename:const std::vector<const Crtc * > &
possibleCrtcs	src/drm.h	/^  const std::vector<const Crtc*>& possibleCrtcs() const {$/;"	f	class:DRM::Plane	typeref:typename:const std::vector<const Crtc * > &
possibleCrtcsMask_	src/drm.h	/^  uint32_t possibleCrtcsMask_;$/;"	m	class:DRM::Plane	typeref:typename:uint32_t
possibleCrtcs_	src/drm.h	/^  std::vector<const Crtc*> possibleCrtcs_;$/;"	m	class:DRM::Encoder	typeref:typename:std::vector<const Crtc * >
possibleCrtcs_	src/drm.h	/^  std::vector<const Crtc*> possibleCrtcs_;$/;"	m	class:DRM::Plane	typeref:typename:std::vector<const Crtc * >
printExit	src/twincam.cpp	/^static void printExit([[maybe_unused]] int signal) {$/;"	f	typeref:typename:void	file:
print_available_cameras	src/twincam.h	/^  bool print_available_cameras = false;$/;"	m	struct:options	typeref:typename:bool
print_func	src/twincam.h	/^  bool print_func = false;$/;"	m	struct:options	typeref:typename:bool
processArgs	src/twincam.cpp	/^static int processArgs(int argc, char** argv) {$/;"	f	typeref:typename:int	file:
processRequest	src/camera_session.cpp	/^void CameraSession::processRequest(Request* request) {$/;"	f	class:CameraSession	typeref:typename:void
processRequest	src/file_sink.cpp	/^bool FileSink::processRequest(Request* request) {$/;"	f	class:FileSink	typeref:typename:bool
processRequest	src/kms_sink.cpp	/^bool KMSSink::processRequest(libcamera::Request* camRequest) {$/;"	f	class:KMSSink	typeref:typename:bool
processRequest	src/sdl_sink.cpp	/^bool SDLSink::processRequest(Request* request) {$/;"	f	class:SDLSink	typeref:typename:bool
processSDLEvents	src/sdl_sink.cpp	/^void SDLSink::processSDLEvents() {$/;"	f	class:SDLSink	typeref:typename:void
process_image	src/first_frame.c	/^static void process_image(const void* p, int size) {$/;"	f	typeref:typename:void	file:
projectinfo	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection.information
properties	src/drm.h	/^  const std::list<Property>& properties() const { return properties_; }$/;"	f	class:DRM::Device	typeref:typename:const std::list<Property> &
properties	src/drm.h	/^  const std::vector<PropertyValue>& properties() const { return properties_; }$/;"	f	class:DRM::Object	typeref:typename:const std::vector<PropertyValue> &
properties_	src/drm.h	/^  std::list<Property> properties_;$/;"	m	class:DRM::Device	typeref:typename:std::list<Property>
properties_	src/drm.h	/^  std::vector<PropertyValue> properties_;$/;"	m	class:DRM::Object	typeref:typename:std::vector<PropertyValue>
property	src/drm.cpp	/^const Property* Object::property(const std::string_view& name) const {$/;"	f	class:DRM::Object	typeref:typename:const Property *
propertyType	src/drm.h	/^  Type propertyType() const { return type_; }$/;"	f	class:DRM::Property	typeref:typename:Type
propertyValue	src/drm.cpp	/^const PropertyValue* Object::propertyValue(const std::string_view& name) const {$/;"	f	class:DRM::Object	typeref:typename:const PropertyValue *
ptr	src/twincam.cpp	/^  struct udev* ptr = 0;$/;"	m	struct:udev	typeref:struct:udev *	file:
ptr	src/twincam.cpp	/^  struct udev_device* ptr = 0;$/;"	m	struct:udev_device	typeref:struct:udev_device *	file:
ptr	src/twincam.cpp	/^  struct udev_enumerate* ptr = 0;$/;"	m	struct:udev_enum	typeref:struct:udev_enumerate *	file:
ptr_	src/sdl_texture.h	/^  SDL_Texture* ptr_;$/;"	m	class:SDLTexture	typeref:typename:SDL_Texture *
pushCallList	src/event_loop.cpp	/^void EventLoop::pushCallList(const std::function<void()>& func) {$/;"	f	class:EventLoop	typeref:typename:void
queueCount_	src/camera_session.h	/^  unsigned int queueCount_ = 0;$/;"	m	class:CameraSession	typeref:typename:unsigned int
queueRequest	src/camera_session.cpp	/^int CameraSession::queueRequest(Request* request) {$/;"	f	class:CameraSession	typeref:typename:int
queued_	src/kms_sink.h	/^  std::unique_ptr<Request> queued_;$/;"	m	class:KMSSink	typeref:typename:std::unique_ptr<Request>
quit	src/twincam.cpp	/^void CamApp::quit() {$/;"	f	class:CamApp	typeref:typename:void
read_frame	src/first_frame.c	/^static int read_frame(void) {$/;"	f	typeref:typename:int	file:
rect_	src/sdl_sink.h	/^  SDL_Rect rect_;$/;"	m	class:SDLSink	typeref:typename:SDL_Rect
rect_	src/sdl_texture.h	/^  const SDL_Rect rect_;$/;"	m	class:SDLTexture	typeref:typename:const SDL_Rect
renderBuffer	src/sdl_sink.cpp	/^void SDLSink::renderBuffer(FrameBuffer* buffer) {$/;"	f	class:SDLSink	typeref:typename:void
renderer_	src/sdl_sink.h	/^  SDL_Renderer* renderer_;$/;"	m	class:SDLSink	typeref:typename:SDL_Renderer *
requestComplete	src/camera_session.cpp	/^void CameraSession::requestComplete(Request* request) {$/;"	f	class:CameraSession	typeref:typename:void
requestComplete	src/drm.h	/^  libcamera::Signal<AtomicRequest*> requestComplete;$/;"	m	class:DRM::Device	typeref:typename:libcamera::Signal<AtomicRequest * >
requestComplete	src/kms_sink.cpp	/^void KMSSink::requestComplete(DRM::AtomicRequest* const request) {$/;"	f	class:KMSSink	typeref:typename:void
requestProcessed	src/frame_sink.h	/^  libcamera::Signal<libcamera::Request*> requestProcessed;$/;"	m	class:FrameSink	typeref:typename:libcamera::Signal<libcamera::Request * >
request_	src/drm.h	/^  drmModeAtomicReq* request_;$/;"	m	class:DRM::AtomicRequest	typeref:typename:drmModeAtomicReq *
requests_	src/camera_session.h	/^  std::vector<std::unique_ptr<libcamera::Request>> requests_;$/;"	m	class:CameraSession	typeref:typename:std::vector<std::unique_ptr<libcamera::Request>>
rgb_	src/sdl_texture_mjpg.h	/^  std::unique_ptr<unsigned char[]> rgb_;$/;"	m	class:SDLTextureMJPG	typeref:typename:std::unique_ptr<unsigned char[]>
run	src/twincam.cpp	/^int CamApp::run() {$/;"	f	class:CamApp	typeref:typename:int
sdl	src/twincam.h	/^  bool sdl = false;$/;"	m	struct:options	typeref:typename:bool
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:0
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:1
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:10
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:11
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:12
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:13
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:14
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:15
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:16
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:17
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:18
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:19
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:2
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:20
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:21
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:22
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:23
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:24
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:25
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:26
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:27
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:28
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:29
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:3
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:30
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:31
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:32
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:33
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:34
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:35
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:36
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:37
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:38
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:39
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:4
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:40
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:41
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:42
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:43
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:44
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:45
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:46
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:47
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:48
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:49
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:5
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:50
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:51
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:52
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:53
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:54
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:55
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:56
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:57
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:58
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:59
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:6
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:60
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:61
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:62
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:63
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:64
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:65
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:66
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:67
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:7
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:8
section	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:9
selectPipeline	src/kms_sink.cpp	/^int KMSSink::selectPipeline(const libcamera::PixelFormat& format) {$/;"	f	class:KMSSink	typeref:typename:int
setPossiblePlanesForEachCRTC	src/drm.cpp	/^void Device::setPossiblePlanesForEachCRTC() {$/;"	f	class:DRM::Device	typeref:typename:void
setup	src/drm.cpp	/^int Plane::setup() {$/;"	f	class:DRM::Plane	typeref:typename:int
setup	src/drm.h	/^  virtual int setup() { return 0; }$/;"	f	class:DRM::Object	typeref:typename:int
short_options	src/first_frame.c	/^static const char short_options[] = "d:hmrsuofc:";$/;"	v	typeref:typename:const char[]	file:
signalHandler	src/twincam.cpp	/^static void signalHandler([[maybe_unused]] int signal) {$/;"	f	typeref:typename:void	file:
sinkRelease	src/camera_session.cpp	/^void CameraSession::sinkRelease(Request* request) {$/;"	f	class:CameraSession	typeref:typename:void
sink_	src/camera_session.h	/^  std::unique_ptr<FrameSink> sink_;$/;"	m	class:CameraSession	typeref:typename:std::unique_ptr<FrameSink>
size_	src/kms_sink.h	/^  libcamera::Size size_;$/;"	m	class:KMSSink	typeref:typename:libcamera::Size
sonar.organization	sonar-project.properties	/^sonar.organization=ericcurtin$/;"	k
sonar.projectKey	sonar-project.properties	/^sonar.projectKey=ericcurtin_twincam$/;"	k
source	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	s	object:directories
sources	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	a	object:0.target_sources.0
start	src/camera_session.cpp	/^int CameraSession::start() {$/;"	f	class:CameraSession	typeref:typename:int
start	src/first_frame.c	/^  void* start;$/;"	m	struct:buffer	typeref:typename:void *	file:
start	src/frame_sink.cpp	/^int FrameSink::start() {$/;"	f	class:FrameSink	typeref:typename:int
start	src/sdl_sink.cpp	/^int SDLSink::start() {$/;"	f	class:SDLSink	typeref:typename:int
startCapture	src/camera_session.cpp	/^int CameraSession::startCapture() {$/;"	f	class:CameraSession	typeref:typename:int
start_capturing	src/first_frame.c	/^static void start_capturing(void) {$/;"	f	typeref:typename:void	file:
status	src/drm.h	/^  Status status() const { return status_; }$/;"	f	class:DRM::Connector	typeref:typename:Status
status_	src/drm.h	/^  Status status_;$/;"	m	class:DRM::Connector	typeref:typename:Status
stop	src/camera_session.cpp	/^void CameraSession::stop() {$/;"	f	class:CameraSession	typeref:typename:void
stop	src/frame_sink.cpp	/^int FrameSink::stop() {$/;"	f	class:FrameSink	typeref:typename:int
stop	src/kms_sink.cpp	/^int KMSSink::stop() {$/;"	f	class:KMSSink	typeref:typename:int
stop	src/sdl_sink.cpp	/^int SDLSink::stop() {$/;"	f	class:SDLSink	typeref:typename:int
stop_capturing	src/first_frame.c	/^static void stop_capturing(void) {$/;"	f	typeref:typename:void	file:
streamNames_	src/camera_session.h	/^  std::map<const libcamera::Stream*, std::string> streamNames_;$/;"	m	class:CameraSession	typeref:typename:std::map<const libcamera::Stream *,std::string>
streamNames_	src/file_sink.h	/^  std::map<const libcamera::Stream*, std::string> streamNames_;$/;"	m	class:FileSink	typeref:typename:std::map<const libcamera::Stream *,std::string>
stride_	src/kms_sink.h	/^  unsigned int stride_;$/;"	m	class:KMSSink	typeref:typename:unsigned int
subproject	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	z	object:0
subproject_dir	build/meson-info/intro-projectinfo.json	/^{"version": "undefined", "descriptive_name": "twincam", "subproject_dir": "subprojects", "subpro/;"	s
subprojects	build/meson-info/intro-projectinfo.json	/^{"version": "undefined", "descriptive_name": "twincam", "subproject_dir": "subprojects", "subpro/;"	a
supportsFormat	src/drm.cpp	/^bool Plane::supportsFormat(const libcamera::PixelFormat& format) const {$/;"	f	class:DRM::Plane	typeref:typename:bool
sysfs_exists	src/first_frame.c	/^static bool sysfs_exists() {$/;"	f	typeref:typename:bool	file:
sysfs_exists	src/twincam.cpp	/^static bool sysfs_exists() {$/;"	f	typeref:typename:bool	file:
tag	build/meson-info/intro-install_plan.json	/^{"targets": {"\/home\/sdunnaga\/projects\/twincam\/build\/twincam": {"destination": "{bindir}\/t/;"	s	object:targets./home/sdunnaga/projects/twincam/build/twincam
target_sources	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	a	object:0
targets	build/meson-info/intro-install_plan.json	/^{"targets": {"\/home\/sdunnaga\/projects\/twincam\/build\/twincam": {"destination": "{bindir}\/t/;"	o
targets	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection.information
tests	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection.information
tests	tests/build_twincam.sh	/^tests() {$/;"	f
texture_	src/sdl_sink.h	/^  std::unique_ptr<SDLTexture> texture_;$/;"	m	class:SDLSink	typeref:typename:std::unique_ptr<SDLTexture>
to_syslog	src/first_frame.c	/^static bool to_syslog = false;$/;"	v	typeref:typename:bool	file:
to_syslog	src/twincam.h	/^  bool to_syslog = false;$/;"	m	struct:options	typeref:typename:bool
twincam	README.md	/^# twincam$/;"	c
twincam	meson.build	/^project('twincam', 'c', 'cpp',$/;"	P
twincam	meson.build	/^twincam  = executable('twincam', twincam_sources, include_directories : incdir,$/;"	B
twincam	meson.build	/^twincam  = executable('twincam', twincam_sources, include_directories : incdir,$/;"	V
twincam	twincam.spec	/^Name:          twincam$/;"	p
twincam_cpp_args	meson.build	/^twincam_cpp_args = []$/;"	V
twincam_sources	meson.build	/^twincam_sources = files([$/;"	V
twncm_atoi	src/twncm_stdlib.h	/^static int twncm_atoi(const char* buf) {$/;"	f	typeref:typename:int
twncm_close	src/twncm_fnctl.cpp	/^int twncm_close(const int fd) {$/;"	f	typeref:typename:int
twncm_open_read	src/twncm_fnctl.cpp	/^int twncm_open_read(const char* file) {$/;"	f	typeref:typename:int
twncm_open_write	src/twncm_fnctl.cpp	/^int twncm_open_write(const char* file) {$/;"	f	typeref:typename:int
twncm_remove	src/twncm_fnctl.cpp	/^int twncm_remove(const char* file) {$/;"	f	typeref:typename:int
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:0
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:1
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:10
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:11
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:12
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:13
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:14
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:15
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:16
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:17
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:18
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:19
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:2
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:20
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:21
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:22
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:23
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:24
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:25
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:26
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:27
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:28
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:29
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:3
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:30
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:31
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:32
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:33
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:34
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:35
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:36
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:37
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:38
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:39
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:4
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:40
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:41
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:42
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:43
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:44
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:45
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:46
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:47
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:48
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:49
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:5
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:50
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:51
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:52
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:53
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:54
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:55
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:56
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:57
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:58
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:59
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:6
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:60
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:61
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:62
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:63
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:64
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:65
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:66
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:67
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:7
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:8
type	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:9
type	build/meson-info/intro-targets.json	/^[{"name": "twincam", "id": "twincam@exe", "type": "executable", "defined_in": "\/home\/sdunnaga\//;"	s	object:0
type	src/drm.h	/^  Type type() const { return type_; }$/;"	f	class:DRM::Object	typeref:typename:Type
type_	src/drm.h	/^  Type type_;$/;"	m	class:DRM::Object	typeref:typename:Type
type_	src/drm.h	/^  Type type_;$/;"	m	class:DRM::Plane	typeref:typename:Type
type_	src/drm.h	/^  Type type_;$/;"	m	class:DRM::Property	typeref:typename:Type
type_	src/drm.h	/^  uint32_t type_;$/;"	m	class:DRM::Connector	typeref:typename:uint32_t
type_	src/drm.h	/^  uint32_t type_;$/;"	m	class:DRM::Encoder	typeref:typename:uint32_t
udev	src/twincam.cpp	/^struct udev {$/;"	s	file:
udev_device	src/twincam.cpp	/^struct udev_device {$/;"	s	file:
udev_enum	src/twincam.cpp	/^struct udev_enum {$/;"	s	file:
uninit_device	src/first_frame.c	/^static void uninit_device(void) {$/;"	f	typeref:typename:void	file:
update	src/sdl_texture_mjpg.cpp	/^void SDLTextureMJPG::update(const std::vector<libcamera::Span<const uint8_t>> &data)$/;"	f	class:SDLTextureMJPG	typeref:typename:void
update	src/sdl_texture_yuyv.cpp	/^void SDLTextureYUYV::update(const std::vector<libcamera::Span<const uint8_t>> &data) {$/;"	f	class:SDLTextureYUYV	typeref:typename:void
updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b	object:introspection.information.benchmarks
updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b	object:introspection.information.buildoptions
updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b	object:introspection.information.buildsystem_files
updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b	object:introspection.information.dependencies
updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b	object:introspection.information.install_plan
updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b	object:introspection.information.installed
updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b	object:introspection.information.projectinfo
updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b	object:introspection.information.targets
updated	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	b	object:introspection.information.tests
uptime	src/twincam.h	/^  bool uptime = false;$/;"	m	struct:options	typeref:typename:bool
uptime	src/uptime.cpp	/^int uptime(float* up, float* elapsed) {$/;"	f	typeref:typename:int
uptime_str	src/uptime.cpp	/^void uptime_str(std::string& str) {$/;"	f	typeref:typename:void
usage	src/first_frame.c	/^static void usage(FILE* fp, char** argv) {$/;"	f	typeref:typename:void	file:
valid_	src/drm.h	/^  bool valid_ = true;$/;"	m	class:DRM::AtomicRequest	typeref:typename:bool
validateConfig	src/camera_session.cpp	/^int CameraSession::validateConfig() {$/;"	f	class:CameraSession	typeref:typename:int
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:0
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:1
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:12
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:35
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:36
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:38
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:39
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:41
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:44
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:47
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:5
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:50
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	a	object:8
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:13
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:17
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:23
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:25
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:26
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:28
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:30
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:32
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:34
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:42
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:45
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:48
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:51
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:6
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:66
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	b	object:67
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	n	object:15
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	n	object:22
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	n	object:27
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	n	object:9
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:10
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:11
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:14
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:16
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:18
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:19
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:2
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:20
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:21
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:24
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:29
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:3
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:31
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:33
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:37
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:4
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:40
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:43
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:46
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:49
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:52
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:53
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:54
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:55
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:56
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:57
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:58
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:59
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:60
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:61
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:62
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:63
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:64
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:65
value	build/meson-info/intro-buildoptions.json	/^[{"name": "build.cmake_prefix_path", "value": [], "section": "core", "machine": "any", "type": "/;"	s	object:7
value	src/drm.h	/^  uint64_t value() const { return value_; }$/;"	f	class:DRM::PropertyValue	typeref:typename:uint64_t
value_	src/drm.h	/^  uint64_t value_;$/;"	m	class:DRM::PropertyValue	typeref:typename:uint64_t
values	src/drm.h	/^  std::vector<uint64_t> values() const { return values_; }$/;"	f	class:DRM::Property	typeref:typename:std::vector<uint64_t>
values_	src/drm.h	/^  std::vector<uint64_t> values_;$/;"	m	class:DRM::Property	typeref:typename:std::vector<uint64_t>
verbose	src/twincam.h	/^  bool verbose = false;$/;"	m	struct:options	typeref:typename:bool
version	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:0
version	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:1
version	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:2
version	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:3
version	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:4
version	build/meson-info/intro-dependencies.json	/^[{"name": "libcamera", "version": "0.0.0", "compile_args": ["-I\/usr\/include\/libcamera"], "lin/;"	s	object:5
version	build/meson-info/intro-projectinfo.json	/^{"version": "undefined", "descriptive_name": "twincam", "subproject_dir": "subprojects", "subpro/;"	s
version	build/meson-info/meson-info.json	/^{"meson_version": {"full": "0.62.2", "major": 0, "minor": 62, "patch": 2}, "directories": {"sour/;"	o	object:introspection
wait_for_udev	src/twincam.cpp	/^static int wait_for_udev(const char* subsys) {$/;"	f	typeref:typename:int	file:
window_	src/sdl_sink.h	/^  SDL_Window* window_;$/;"	m	class:SDLSink	typeref:typename:SDL_Window *
writeBuffer	src/file_sink.cpp	/^void FileSink::writeBuffer(FrameBuffer* buffer) {$/;"	f	class:FileSink	typeref:typename:void
x_	src/kms_sink.h	/^  unsigned int x_;  \/\/ Where to start drawing camera output$/;"	m	class:KMSSink	typeref:typename:unsigned int
xioctl	src/first_frame.c	/^static int xioctl(int fh, int request, void* arg) {$/;"	f	typeref:typename:int	file:
y_	src/kms_sink.h	/^  unsigned int y_;  \/\/ Where to start drawing camera output$/;"	m	class:KMSSink	typeref:typename:unsigned int
~AtomicRequest	src/drm.cpp	/^AtomicRequest::~AtomicRequest() {$/;"	f	class:DRM::AtomicRequest
~CameraSession	src/camera_session.cpp	/^CameraSession::~CameraSession() {$/;"	f	class:CameraSession
~Device	src/drm.cpp	/^Device::~Device() {$/;"	f	class:DRM::Device
~Event	src/event_loop.cpp	/^EventLoop::Event::~Event() {$/;"	f	class:EventLoop::Event
~EventLoop	src/event_loop.cpp	/^EventLoop::~EventLoop() {$/;"	f	class:EventLoop
~FileSink	src/file_sink.cpp	/^FileSink::~FileSink() {}$/;"	f	class:FileSink
~FrameBuffer	src/drm.cpp	/^FrameBuffer::~FrameBuffer() {$/;"	f	class:DRM::FrameBuffer
~FrameSink	src/frame_sink.cpp	/^FrameSink::~FrameSink() {}$/;"	f	class:FrameSink
~Image	src/image.cpp	/^Image::~Image() {$/;"	f	class:Image
~SDLSink	src/sdl_sink.cpp	/^SDLSink::~SDLSink() {$/;"	f	class:SDLSink
~SDLTexture	src/sdl_texture.cpp	/^SDLTexture::~SDLTexture() {$/;"	f	class:SDLTexture
~udev	src/twincam.cpp	/^  ~udev() {$/;"	f	struct:udev	file:
~udev_device	src/twincam.cpp	/^  ~udev_device() {$/;"	f	struct:udev_device	file:
~udev_enum	src/twincam.cpp	/^  ~udev_enum() {$/;"	f	struct:udev_enum	file:
